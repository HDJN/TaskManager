
@{
    ViewBag.Title = "TaskList";
}
@model TaskManager.Entity.Ts_Tasks
<html>
<head>
    <script src="~/Scripts/jquery-1.12.3.min.js"></script>

    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/dataTables.bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/common.js"></script>

</head>
<body> 
    <form class="form-horizontal">
        <div class="form-group">
            <label class="col-sm-2 control-label">标识</label>
            <div class="col-sm-9">
                @Html.Label( "",Model.Guid, new { Class = "form-control" })
                @Html.HiddenFor(m=>m.Guid)
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">名称</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.Title, new { Class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="inputPassword" class="col-sm-2 control-label">执行路径</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.ExecUrl, new { Class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="inputPassword" class="col-sm-2 control-label">执行间隔</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.Interval, new { Class = "form-control" })
                <p class="text-primary">cron表达式 <a href="http://cron.qqe2.com/">参考</a> &nbsp;&nbsp;<a class="btn btn-default btnNextTime" href="javascript:void(0);">下次执行时间</a></p> 
            </div>
        </div>
        <div class="form-group">
            <label for="inputPassword" class="col-sm-2 control-label">状态</label>
            <div class="col-sm-9">
                @Html.DropDownListFor(m => m.Status, (List<SelectListItem>)ViewBag.StatusList, new { Class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="inputPassword" class="col-sm-2 control-label">启动类型</label>
            <div class="col-sm-9">
                @Html.DropDownListFor(m => m.ExecType, (List<SelectListItem>)ViewBag.ExecTypeList, new { Class = "form-control" })

            </div>
        </div>
        <div class="form-group">
            <label for="inputPassword" class="col-sm-2 control-label">执行参数</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.ExecParams, new { Class = "form-control" })
        </div>
        </div>
        <div class="form-group">
            <label for="inputPassword" class="col-sm-2 control-label">超时时间</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.TimeOut, new { Class = "form-control" })
                <p class="text-primary">单位秒</p>
            </div>
        </div>
        <div class="form-group">
            <label for="inputPassword" class="col-sm-2 control-label">是否记录返回结果</label>
            <div class="col-sm-9 left">
                @Html.CheckBoxFor(m => m.IsLogResult)
            </div>
        </div>
        <div id="divHttp">
            <div class="form-group">
                <label for="inputPassword" class="col-sm-2 control-label">HTTP请求类型</label>
                <div class="col-sm-9">
                    @Html.DropDownListFor(m => m.ExecMethod, (List<SelectListItem>)ViewBag.ExecMethodList, new { Class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label for="inputPassword" class="col-sm-2 control-label">编码</label>
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.Encoding, new { Class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label for="inputPassword" class="col-sm-2 control-label">返回结果是否符合规定</label>
                <div class="col-sm-9">
                    @Html.CheckBoxFor(m => m.IsResponseNorm)
                    <p class="text-primary">返回为JSON格式字符串 {"Code":0,"Msg":"ok","Data":null}&nbsp;&nbsp;&nbsp;Code=0时为执行成功</p>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="inputPassword" class="col-sm-2 control-label">是否异常通知</label>
            <div class="col-sm-9">
                @Html.CheckBoxFor(m => m.IsErrorAlert)
            </div>
        </div>
            
        <div class="form-group" id="divMail">
            <label for="inputPassword" class="col-sm-2 control-label">通知收件人</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.ReceiveEmail, new { Class = "form-control" })
                <p class="text-primary">多个用;号隔开如  a@qq.com;b@qq.com;c@qq.com</p>
</div>
        </div>
        <div class="form-group" id="divMail">
            <label for="inputPassword" class="col-sm-2 control-label">运行服务器</label>
            <div class="col-sm-9">
                @Html.Label("RunServerId", Model.RunServerId.ToString(), new { Class = "form-control" })
                <p class="text-primary">当前运行的服务器ID</p>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2"></div>
            <div class="col-sm-9">
                <input class="btn btn-default btnAdd" type="button" value="保存">
            </div>
        </div>

    </form>
    <script>

        $(document).ready(function () {
            $("#ExecType").change(function () {
                if ($("#ExecType").val() == '@TaskManager.Entity.ExecTypeEnum.HTTP.GetHashCode()') {
                    $("#divHttp").show();
                } else {
                    $("#divHttp").hide();
                }
            });
            $("#IsErrorAlert").change(function () {
                if ($("#IsErrorAlert").is(":checked")){
                    $("#divMail").show();
                } else {
                    $("#divMail").hide();
                }
            });
            
            $("#ExecType").change();
            $("#IsErrorAlert").change();

            var isSubmit = false;
            $(".btnAdd").click(function () {


                if (isSubmit)
                {
                    alert("你不要急，已经提交过了，等会");
                    return false;
                }
            
                isSubmit = true;
                var data = $("form").serializeArray();


                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveTask")',
                    data: data,
                    dataType: "json",
                    success: function (data) {
                        isSubmit = false;
                        if (data.IsSuccess == 1) {
                            if (onSuccess)
                                onSuccess();
                             
                        } else {
                            alert(data.Msg);
                        }
                    },
                    error: function () {
                        alert('保存失败,系统异常');
                        isSubmit = false;
                    }
                });
                return false;
            });

            $(".btnNextTime").click(function () {
             $.ajax({
                    type: "POST",
                    url: '@Url.Action("QueryNextTime")',
                 data: {"Interval":$("#Interval").val()},
                    dataType: "json",
                    success: function (data) {
                        isSubmit = false;
                        if (data.IsSuccess == 1) {
                            var msgAlert = "";
                            var msgLog = "";
                            for (var i = 0; i < data.Data.length; i++) {
                                if (i < 5)
                                    msgAlert += data.Data[i]+ "\r\n";
                                msgLog += data.Data[i] + "\r\n";
                            }
                            
                            console.log(msgLog);
                            alert(msgAlert);
                             
                        } else {
                            alert(data.Msg);
                        }
                    },
                    error: function () {
                        alert('查询失败');
                        isSubmit = false;
                    }
             });
            });
        });
    </script>
</body>
</html>